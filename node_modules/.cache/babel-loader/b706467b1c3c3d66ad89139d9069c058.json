{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\tailwind\\\\src\\\\pages\\\\PrivateRoute.page.js\",\n  _s = $RefreshSig$();\nimport { useContext } from \"react\";\nimport { Navigate, Outlet, useLocation } from \"react-router-dom\";\nimport { UserContext } from \"../contexts/user.context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = () => {\n  _s();\n  // Fetching the user from the user context.\n  const {\n    user\n  } = useContext(UserContext);\n  const location = useLocation();\n  const redirectLoginUrl = `/login?redirectTo=${encodeURI(location.pathname)}`;\n\n  // If the user is not logged in we are redirecting them\n  // to the login page. Otherwise we are letting them to\n  // continue to the page as per the URL using <Outlet />.\n  return !user ? /*#__PURE__*/_jsxDEV(Navigate, {\n    to: redirectLoginUrl\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 17\n  }, this) : /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 54\n  }, this);\n};\n_s(PrivateRoute, \"M79qLDH95oiTF2KFpNG0BOxgtck=\", false, function () {\n  return [useLocation];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["useContext","Navigate","Outlet","useLocation","UserContext","PrivateRoute","user","location","redirectLoginUrl","encodeURI","pathname"],"sources":["C:/Users/Admin/Desktop/tailwind/src/pages/PrivateRoute.page.js"],"sourcesContent":["import { useContext } from \"react\";\r\nimport { Navigate, Outlet, useLocation } from \"react-router-dom\";\r\nimport { UserContext } from \"../contexts/user.context\";\r\n \r\nconst PrivateRoute = () => {\r\n \r\n // Fetching the user from the user context.\r\n const { user } = useContext(UserContext);\r\n const location = useLocation();\r\n const redirectLoginUrl = `/login?redirectTo=${encodeURI(location.pathname)}`;\r\n \r\n // If the user is not logged in we are redirecting them\r\n // to the login page. Otherwise we are letting them to\r\n // continue to the page as per the URL using <Outlet />.\r\n return !user ? <Navigate to={redirectLoginUrl} /> : <Outlet /> ;\r\n}\r\n \r\nexport default PrivateRoute;"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,SAASC,WAAW,QAAQ,0BAA0B;AAAC;AAEvD,MAAMC,YAAY,GAAG,MAAM;EAAA;EAE1B;EACA,MAAM;IAAEC;EAAK,CAAC,GAAGN,UAAU,CAACI,WAAW,CAAC;EACxC,MAAMG,QAAQ,GAAGJ,WAAW,EAAE;EAC9B,MAAMK,gBAAgB,GAAI,qBAAoBC,SAAS,CAACF,QAAQ,CAACG,QAAQ,CAAE,EAAC;;EAE5E;EACA;EACA;EACA,OAAO,CAACJ,IAAI,gBAAG,QAAC,QAAQ;IAAC,EAAE,EAAEE;EAAiB;IAAA;IAAA;IAAA;EAAA,QAAG,gBAAG,QAAC,MAAM;IAAA;IAAA;IAAA;EAAA,QAAG;AAC/D,CAAC;AAAA,GAXKH,YAAY;EAAA,QAIAF,WAAW;AAAA;AAAA,KAJvBE,YAAY;AAalB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module"}